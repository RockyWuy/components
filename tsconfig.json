{
  "compilerOptions": {
    "target": "es5", // 指定 ECMAScript 目标版本: 'ES5'
    "module": "commonjs", // 指定使用模块：'commonjs' 'amd' 'system' 'umd' 'es2015'
    "moduleResolution": "node", // 选择模块解析策略
    "experimentalDecorators": true, // 启用实验性的ES装饰器
    "sourceMap": true, // 把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件
    // "strict": true, // 启用所有严格类型检查选项
    // "noImplicitAny": true, // 在表达式和声明上有隐含的 any类型时报错
    // "alwaysStrict": true, // 以严格模式检查模块，并在每个文件里加入 'use strict'
    "declaration": true, // 生成相应的.d.ts文件
    "removeComments": true, // 删除编译后的所有的注释
    "noImplicitReturns": true, // 不是函数的所有返回路径都有返回值时报错
    "importHelpers": true, // 从 tslib 导入辅助工具函数
    "lib": ["es6", "dom"], // 指定要包含在编译中的库文件
    "suppressImplicitAnyIndexErrors": true, // 阻止 --noImplicitAny对缺少索引签名的索引对象报错
    "outDir": "./dist/",
    // "allowJs": true,
    "jsx": "react",
    "baseUrl": ".",
    // "noEmitOnError": false, // 报错时不生成输出文件
    "paths": {
      "@components/*": ["./components/*"],
      "@themes/*": ["./themes/*"],
      "@utils/*": ["./utils/*"]
    }
    // "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查, 解决引入styled-components时所报错误
    // "types": [ // 要包含的类型声明文件名列表 去掉react-native  解决引入styled-components时所报错误 同时引入react及react-native
    // "node",
    // "react",
    // "react-dom",
    // "styled-components",
    // "react-native"
    // ]
  },
  "include": ["./**/*.ts"], // 需要编译的ts文件一个*表示文件匹配**表示忽略文件的深度问题
  "exclude": ["node_modules", "**/*.test.ts"] // 这个目录下的代码不会被 typescript 处理
}
